{"version":3,"sources":["Converter/Converter.tsx","api/api.ts","App.tsx","index.tsx"],"names":["Converter","state","valueFrom","valueTo","rateFrom","rateTo","exchangeRates","rate1","rate2","value","rateEur","rateUsd","result","handelChange","event","setState","target","String","props","eurRate","usdRate","toFixed","handleChangeSelectFrom","handleChangeSelectTo","this","className","type","min","name","placeholder","onChange","readOnly","date","React","Component","getRate","fetch","then","response","ok","json","Promise","reject","Error","App","hasLoadingError","error","rates","filter","rate","cc","exchangedate","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d52d3ae.chunk.js","sourcesContent":["import React from 'react';\nimport './Converter.scss';\n\ninterface State {\n  valueFrom: string,\n  valueTo: string,\n  rateFrom: string,\n  rateTo: string,\n}\n\ntype Props = {\n  eurRate: number,\n  usdRate: number,\n  date: string,\n};\n\nexport class Converter extends React.Component<Props, State> {\n  state = {\n    valueFrom: '',\n    valueTo: '',\n    rateFrom: 'UAH',\n    rateTo: 'UAH',\n  };\n\n  exchangeRates = (\n    rate1: string, rate2: string, value: string, rateEur:number, rateUsd: number,\n  ) => {\n    let result;\n\n    if (rate1 === rate2) {\n      result = +value * 1;\n    } else if (rate1 === 'UAH' && rate2 !== 'UAH') {\n      result = rate2 === 'USD' ? +value / rateUsd : +value / rateEur;\n    } else if (rate1 === 'USD' && rate2 !== 'USD') {\n      result = rate2 === 'UAH' ? +value * rateUsd : +value * (rateUsd / rateEur);\n    } else if (rate1 === 'EUR' && rate2 !== 'EUR') {\n      result = rate2 === 'UAH' ? +value * rateEur : +value * (rateEur / rateUsd);\n    }\n\n    return result;\n  };\n\n  handelChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ valueFrom: event.target.value });\n    this.setState((state) => ({\n      valueTo: state.valueFrom\n        ? String(this.exchangeRates(\n          state.rateFrom, state.rateTo, state.valueFrom, this.props.eurRate, this.props.usdRate,\n        )?.toFixed(2))\n        : '',\n    }));\n  };\n\n  handleChangeSelectFrom = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      rateFrom: event.target.value,\n    });\n    this.setState((state) => ({\n      valueTo: state.valueFrom\n        ? String(this.exchangeRates(\n          state.rateFrom, state.rateTo, state.valueFrom, this.props.eurRate, this.props.usdRate,\n        )?.toFixed(2))\n        : '',\n    }));\n  };\n\n  handleChangeSelectTo = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      rateTo: event.target.value,\n    });\n    this.setState((state) => ({\n      valueTo: state.valueFrom\n        ? String(this.exchangeRates(\n          state.rateFrom, state.rateTo, state.valueFrom, this.props.eurRate, this.props.usdRate,\n        )?.toFixed(2))\n        : '',\n    }));\n  };\n\n  render() {\n    const {\n      valueFrom, valueTo, rateFrom, rateTo,\n    } = this.state;\n\n    return (\n      <div className=\"converter\">\n        <input\n          type=\"number\"\n          min=\"0\"\n          name=\"valueFrom\"\n          className=\"converter__input\"\n          placeholder=\"Amount\"\n          value={valueFrom}\n          onChange={this.handelChange}\n        />\n\n        <select\n          name=\"ratesName\"\n          className=\"converter__select\"\n          value={rateFrom}\n          onChange={this.handleChangeSelectFrom}\n        >\n          <option value=\"UAH\">UAH</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n\n        <input\n          type=\"number\"\n          name=\"valueTo\"\n          className=\"converter__input converter__input--readonly\"\n          value={valueTo}\n          readOnly\n        />\n\n        <select\n          name=\"ratesName\"\n          className=\"converter__select\"\n          value={rateTo}\n          onChange={this.handleChangeSelectTo}\n        >\n          <option value=\"UAH\">UAH</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n\n        <div className=\"converter__text\">\n          At the rate of the NBU on\n          {' '}\n          {this.props.date}\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json';\n\nexport const getRate = (): Promise<Rate[]> => {\n  return fetch(`${BASE_URL}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error());\n      }\n\n      return response.json();\n    });\n};\n\nexport const getRateEUR = () => {\n  return getRate()\n    .then(rates => rates.filter(rate => rate.cc === 'EUR'));\n};\n\nexport const getRateUSD = () => {\n  return getRate()\n    .then(rates => rates.filter(rate => rate.cc === 'USD'));\n};\n","import React from 'react';\nimport './App.scss';\n\nimport { Converter } from './Converter';\nimport { getRateEUR, getRateUSD } from './api/api';\n\ninterface State {\n  eurRate: number | null,\n  usdRate: number | null,\n  date: string,\n  hasLoadingError: boolean;\n  error: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    eurRate: null,\n    usdRate: null,\n    date: '',\n    hasLoadingError: false,\n    error: '',\n  };\n\n  componentDidMount() {\n    getRateEUR()\n      .then(rate => {\n        this.setState({\n          eurRate: +rate[0].rate.toFixed(2),\n          date: rate[0].exchangedate,\n          hasLoadingError: false,\n          error: '',\n        });\n      })\n      .catch(() => {\n        this.setState({ hasLoadingError: true, error: 'an error occurred when loading rates' });\n      });\n\n    getRateUSD()\n      .then(rate => {\n        this.setState({\n          usdRate: +rate[0].rate.toFixed(2),\n          hasLoadingError: false,\n          error: '',\n        });\n      })\n      .catch(() => {\n        this.setState({ hasLoadingError: true, error: 'an error occurred when loading rates' });\n      });\n  }\n\n  render() {\n    const {\n      eurRate, usdRate, date, hasLoadingError, error,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <div className=\"logo\"></div>\n          <div className=\"rate\">\n            {hasLoadingError\n              ? (\n                <div>{error}</div>\n              )\n              : (\n                <>\n                  <div>\n                    EUR:\n                    {' '}\n                    {eurRate}\n                  </div>\n                  <div>\n                    USD:\n                    {' '}\n                    {usdRate}\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n\n        <div className=\"App__content\">\n          {(eurRate && usdRate) && (\n            <Converter\n              eurRate={eurRate}\n              usdRate={usdRate}\n              date={date}\n            />\n          )}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}